generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  userName     String
  email        String        @unique
  password     String
  role         Role
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]
}

model DeviceCategory {
  id      String   @id @default(uuid())
  name    String   @unique
  devices Device[]
}

model Device {
  id          String         @id @default(uuid())
  deviceName  String
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  categoryId  String
  category    DeviceCategory @relation(fields: [categoryId], references: [id])

  Reservation   Reservation[]
  ServerDevice  ServerDevice?
  MonitorDevice MonitorDevice?
}

model ServerDevice {
  id      String @id @default(uuid())
  cpu     String
  ram     String
  storage String
  device  Device @relation(fields: [id], references: [id])
}

model MonitorDevice {
  id         String @id @default(uuid())
  screenSize String
  resolution String
  device     Device @relation(fields: [id], references: [id])
}

model Lab {
  id           String        @id @default(uuid())
  Labname      String        @default("LabRoom")
  status       LabStatus
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]
}

model Reservation {
  id        String            @id @default(uuid())
  userId    String
  deviceId  String?
  labId     String?
  startTime DateTime
  endTime   DateTime
  status    ReservationStatus
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  device Device? @relation(fields: [deviceId], references: [id])
  lab    Lab?    @relation(fields: [labId], references: [id])
}

enum Role {
  LECTURER
  STUDENT
  ADMIN
}

enum DeviceStatus {
  AVAILABLE
  IN_USE
  DAMAGED
}

enum LabStatus {
  AVAILABLE
  IN_USE
  UNDER_MAINTENANCE
}

enum ReservationStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

model Login {
  id               Int     @id @default(autoincrement()) @map("id")
  email            String  @map("email") @db.VarChar(40)
  password         String  @map("password")
  mail             String? @map("mail") @db.VarChar(250)
  mail_alert1_flag Boolean @default(false) @map("mail_alert1_flag")
  mail_alert2_flag Boolean @default(false) @map("mail_alert2_flag")
}
